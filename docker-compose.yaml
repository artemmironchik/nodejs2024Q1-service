version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: app
    environment:
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    image: app
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    volumes:
      - /usr/src/app/node_modules
      - ./src:/usr/src/app/src

  postgresdb:
    build:
      context: .
      dockerfile: Dockerfile.db
    image: postgres:15.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data
      - db-logs:/var/log/postgresql
    expose:
      - ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
volumes:
  db-data:
  db-logs:
networks:
  app-network:
    driver: bridge

